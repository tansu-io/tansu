[workspace]
resolver = "2"
members = [
    "tansu-cat",
    "tansu-cli",
    "tansu-kafka-model",
    "tansu-kafka-sans-io",
    "tansu-proxy",
    "tansu-schema-registry",
    "tansu-server",
    "tansu-storage",
    "tansu-topic",
]

[workspace.package]
edition = "2024"
version = "0.1.0"
license = "AGPL-3.0-or-later"
license-file = "LICENSE"

# [workspace.lints.clippy]
# all = "warn"

# [workspace.lints.rust]
# deprecated_in_future = "warn"
# elided_lifetimes_in_paths = "deny"
# missing_copy_implementations = "warn"
# missing_debug_implementations = "warn"
# non_ascii_idents = "forbid"
# nonstandard_style = { level = "deny", priority = -1 }
# rust_2018_idioms = { level = "deny", priority = -1 }
# unreachable_pub = "warn"
# unsafe_code = "forbid"
# unused_import_braces = "warn"
# unused_labels = "warn"
# unused_lifetimes = "warn"
# unused_qualifications = "warn"
# unused_results = "warn"

# [workspace.lints.rustdoc]
# broken_intra_doc_links = "deny"
# private_intra_doc_links = "deny"

[workspace.dependencies]
anyhow = "1.0.94"
apache-avro = "0.17.0"
arrow = { version = "54" }
async-trait = "0.1.86"
bytes = { version = "1", features = ["serde"] }
chrono = "0.4"
clap = { version = "4.5.38", features = ["derive", "env"] }
condtype = "1.3.0"
convert_case = "0.6.0"
crc = "3.0.1"
criterion = { version = "0.5.1", features = ["html_reports"] }
datafusion = "46"
deadpool = "0.12.2"
deadpool-postgres = "0.14.1"
dotenv = "0.15.0"
flate2 = "1.0"
futures = "0.3"
futures-core = "0.3.31"
futures-util = "0.3.31"
getrandom = "0.3"
glob = "0.3.2"
http-body-util = "0.1"
hyper = { version = "1.3", features = ["full"] }
hyper-util = { version = "0.1", features = ["full"] }
iceberg-catalog-memory = { git = "https://github.com/apache/iceberg-rust.git", rev = "31b0c0a602b81e01da9d969b62beffc567bfc0cc" }
iceberg-catalog-rest = { git = "https://github.com/apache/iceberg-rust.git", rev = "31b0c0a602b81e01da9d969b62beffc567bfc0cc" }
iceberg = { git = "https://github.com/apache/iceberg-rust.git", rev = "31b0c0a602b81e01da9d969b62beffc567bfc0cc" }
jsonschema = "0.26.2"
lazy_static = "1.4.0"
lz4 = "1.28.1"
num-bigint = "0.4"
object_store = { version = "0.11.2", features = ["aws"] }
opentelemetry = { version = "0.28.0", default-features = false, features = [
    "metrics",
] }
opentelemetry-jaeger = { version = "0.22.0", features = ["rt-tokio"] }
opentelemetry-otlp = { version = "0.28.0", features = ["grpc-tonic"] }
opentelemetry-prometheus = "0.28.0"
opentelemetry-semantic-conventions = { version = "0.28.0", features = [
    "semconv_experimental",
] }
opentelemetry_sdk = { version = "0.28.0", default-features = false, features = [
    "rt-tokio",
    "metrics",
] }
ordered-float = "4.6"
parquet = "54"
pretty_assertions = "1"
prettyplease = "0.2.29"
proc-macro2 = "1.0.93"
prometheus = "0.13.4"
protobuf-json-mapping = "3.7.1"
protobuf-parse = "3.7.1"
protobuf = { version = "3.7.1", features = ["with-bytes"] }
quote = "1.0"
rand = "0.9"
regex = "1.11.1"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1"
snap = "1.1.1"
syn = { version = "2.0", features = ["full"] }
tempfile = "3"
thiserror = "2.0"
time = { version = "0.3.37", features = ["formatting", "macros"] }
tokio-util = { version = "0.7", features = ["full"] }
tokio = { version = "1", features = ["full"] }
tokio-postgres = { version = "0.7.13", features = [
    "with-serde_json-1",
    "with-uuid-1",
] }
tracing = "0.1"
tracing-core = { version = "0.1" }
tracing-opentelemetry = "0.29.0"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
url = { version = "2.5.4", features = ["serde"] }
uuid = { version = "1.13.2", features = ["serde", "v4", "v7"] }
zstd = "0.13.2"
