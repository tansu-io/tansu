[workspace]
resolver = "2"
members = [
    "tansu-kafka-model",
    "tansu-kafka-sans-io",
    "tansu-proxy",
    "tansu-server",
    "tansu-storage",
    "tansu-varint",
]

[workspace.package]
edition = "2021"
version = "0.1.0"
license = "AGPL-3.0-or-later"
license-file = "LICENSE"

[workspace.lints.clippy]
all = "warn"

[workspace.lints.rust]
deprecated_in_future = "warn"
elided_lifetimes_in_paths = "deny"
missing_copy_implementations = "warn"
missing_debug_implementations = "warn"
non_ascii_idents = "forbid"
nonstandard_style = { level = "deny", priority = -1 }
rust_2018_idioms = { level = "deny", priority = -1 }
unreachable_pub = "warn"
unsafe_code = "forbid"
unused_import_braces = "warn"
unused_labels = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
unused_results = "warn"

[workspace.lints.rustdoc]
broken_intra_doc_links = "deny"
private_intra_doc_links = "deny"

[workspace.dependencies]
anyhow = "1.0.92"
async-trait = "0.1.83"
bytes = { version = "1", features = ["serde"] }
clap = { version = "4.5.20", features = ["derive", "env"] }
condtype = "1.3.0"
convert_case = "0.6.0"
crc = "3.0.1"
criterion = { version = "0.5.1", features = ["html_reports"] }
deadpool = "0.12.1"
deadpool-postgres = "0.14.0"
flate2 = "1.0"
futures = "0.3"
futures-core = "0.3.31"
futures-util = "0.3.31"
getrandom = "0.2"
glob = "0.3.1"
lazy_static = "1.4.0"
lz4 = "1.28.0"
object_store = { version = "0.11.1", features = ["aws"] }
opentelemetry = { version = "0.21.0" }
opentelemetry-jaeger = { version = "0.20.0", features = ["rt-tokio"] }
opentelemetry_sdk = "0.21.2"
pretty_assertions = "1"
prettyplease = "0.2.24"
proc-macro2 = "1.0.89"
quote = "1.0"
rand = "0.8"
regex = "1.11.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1"
snap = "1.1.1"
strum = { version = "0.26", features = ["derive"] }
strum_macros = "0.26"
syn = { version = "2.0", features = ["full"] }
tarpc = { version = "0.34", features = ["full"] }
tempfile = "3"
thiserror = "1.0"
time = { version = "0.3.36", features = ["formatting", "macros"] }
tokio = { version = "1", features = ["full"] }
tokio-postgres = { version = "0.7.12", features = [
    "with-serde_json-1",
    "with-uuid-1",
] }
tracing = "0.1"
tracing-core = { version = "0.1" }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
typetag = "0.2"
ulid = "1.1.3"
url = { version = "2.5.0", features = ["serde"] }
uuid = { version = "1.11.0", features = ["serde", "v4", "v7"] }
zstd = "0.13.2"
