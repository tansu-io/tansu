[package]
name = "tansu-broker"
description = "Tansu Kafka API compatible broker"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
include.workspace = true
keywords.workspace = true
license.workspace = true
repository.workspace = true
version.workspace = true


[lints]
workspace = true

[dependencies]
async-trait.workspace = true
bytes.workspace = true
clap.workspace = true
deadpool-postgres = { workspace = true, optional = true }
futures.workspace = true
glob.workspace = true
http-body-util.workspace = true
hyper-util.workspace = true
hyper.workspace = true
jsonschema.workspace = true
libsql = { workspace = true, optional = true }
object_store = { workspace = true, optional = true }
opentelemetry-otlp.workspace = true
opentelemetry-semantic-conventions.workspace = true
opentelemetry.workspace = true
opentelemetry_sdk.workspace = true
rama.workspace = true
rand.workspace = true
regex.workspace = true
serde.workspace = true
serde_json.workspace = true
tansu-model.workspace = true
tansu-sans-io.workspace = true
tansu-schema.workspace = true
tansu-storage.workspace = true
thiserror.workspace = true
tokio-postgres = { workspace = true, optional = true }
tokio.workspace = true
tracing-opentelemetry.workspace = true
tracing-subscriber.workspace = true
tracing.workspace = true
turso = { workspace = true, optional = true }
url.workspace = true
uuid.workspace = true

[dev-dependencies]
pretty_assertions.workspace = true

[features]
default = ["dynostore", "libsql", "postgres"]
dynostore = ["dep:object_store"]
libsql = ["dep:libsql"]
postgres = ["dep:deadpool-postgres", "dep:tokio-postgres"]
turso = ["dep:turso"]
